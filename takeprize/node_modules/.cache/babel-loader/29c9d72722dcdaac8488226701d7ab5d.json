{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u7530\\u5929\\\\Desktop\\\\\\u62BD\\u5956\\u8F6E\\u76D8\\\\\\u6210\\u54C1\\u7B2C\\u4E8C\\u6B21\\u4FEE\\u6539\\\\takeprize\\\\src\\\\component\\\\Wheel-list\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport { nanoid } from 'nanoid';\nimport PubSub from 'pubsub-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WheelList() {\n  _s();\n\n  //奖品信息\n  const [data, setdata] = useState([]); //奖品index和中奖消息\n\n  const [prize, setprize] = useState(); // 旋转动画\n\n  const [rotate_animate, setrotate] = useState({\n    angle: 0,\n    transition: 'none'\n  }); //从后台获取需要进行展示的奖品信息，并且保证为6个\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // 获取奖品信息\n      const result = await axios('https://qc1hz1.fn.thelarkcloud.com/prizeinfo');\n      const prize_info = result.data.response; // 计算奖品数量，保证其为6个\n\n      const n = prize_info.length;\n\n      if (n < 6) {\n        for (let i = n; i < 6; i++) {\n          prize_info.push({\n            prize_name: \"谢谢参与\",\n            isprize: false,\n            prize_id: nanoid()\n          });\n        }\n      }\n\n      if (n > 6) {\n        while (prize_info.length > 6) {\n          prize_info.pop();\n        }\n      }\n\n      setdata(prize_info);\n    };\n\n    fetchData();\n  }, []); //订阅消息：收到消息后进行旋转\n\n  useEffect(() => {\n    const token = PubSub.subscribe('Prize', (msg, item) => {\n      // 保存奖品index和中奖消息msg\n      setprize(item); // 计算要旋转的角度并旋转\n\n      const angle = -item.prize_index * 60 + 3600;\n      setrotate({\n        angle: angle,\n        transition: 'all 5s ease-out'\n      }); //旋转完成后\n\n      setTimeout(() => {\n        //对角度进行处理，以便下次旋转\n        setrotate({\n          angle: angle % 360,\n          transition: 'none'\n        }); //通知闪烁,同时把中奖消息发送过去\n\n        PubSub.publish('Twinkle', item.msg);\n      }, 5000);\n    });\n    return () => {\n      PubSub.unsubscribe(token);\n    };\n  }, [prize, rotate_animate]); // return (\n  //     // 中间奖品\n  //     <ul id=\"wheel\" className=\"wheel-list\" style={{\n  //         transform:`rotate(${rotate_animate.angle}deg)`,\n  //         transition:rotate_animate.transition\n  //     }} >\n  //         {\n  //             data.map((prize,index)=>(\n  //                 <li key={prize.prize_id} >\n  //                     <i></i>\n  //                     <div className=\"prize\">\n  //                         <p>{prize.prize_name}</p>\n  //                         <img src={`/images/prize_img${index+1}.png`} alt=\"\" />\n  //                     </div>\n  //                 </li>\n  //             ))\n  //         }\n  //     </ul>\n  // )\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    id: \"wheel\",\n    className: \"wheel-list\",\n    style: {\n      transform: `rotate(${rotate_animate.angle}deg)`,\n      transition: rotate_animate.transition\n    },\n    children: console.log(\"data\", data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WheelList, \"7CEPdEainPUyTKn07363nT3hHSc=\");\n\n_c = WheelList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WheelList\");","map":{"version":3,"sources":["C:/Users/田天/Desktop/抽奖轮盘/成品第二次修改/takeprize/src/component/Wheel-list/index.jsx"],"names":["React","useState","useEffect","axios","nanoid","PubSub","WheelList","data","setdata","prize","setprize","rotate_animate","setrotate","angle","transition","fetchData","result","prize_info","response","n","length","i","push","prize_name","isprize","prize_id","pop","token","subscribe","msg","item","prize_index","setTimeout","publish","unsubscribe","transform","console","log"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios';\r\nimport './index.css'\r\nimport { nanoid } from 'nanoid';\r\nimport PubSub from 'pubsub-js';\r\n\r\nexport default function WheelList() {\r\n    //奖品信息\r\n    const [data, setdata] = useState([]);\r\n    //奖品index和中奖消息\r\n    const [prize,setprize] = useState();\r\n    // 旋转动画\r\n    const [rotate_animate,setrotate] = useState({angle:0,transition:'none'});\r\n    //从后台获取需要进行展示的奖品信息，并且保证为6个\r\n    useEffect(() => {\r\n        const fetchData=async ()=>{\r\n            // 获取奖品信息\r\n            const result = await axios('https://qc1hz1.fn.thelarkcloud.com/prizeinfo');\r\n            const prize_info = result.data.response;\r\n            // 计算奖品数量，保证其为6个\r\n            const n=prize_info.length;\r\n            if(n<6){\r\n                for(let i=n;i<6;i++){\r\n                    prize_info.push({prize_name: \"谢谢参与\", isprize: false,prize_id:nanoid()});\r\n                }   \r\n            }\r\n            if(n>6){\r\n                while(prize_info.length>6){\r\n                    prize_info.pop();\r\n                }\r\n            }\r\n            setdata(prize_info);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n    \r\n    //订阅消息：收到消息后进行旋转\r\n    useEffect(() => {\r\n        const token = PubSub.subscribe('Prize',(msg,item)=>{\r\n            // 保存奖品index和中奖消息msg\r\n            setprize(item);\r\n            // 计算要旋转的角度并旋转\r\n            const angle=-item.prize_index*60+3600;\r\n            setrotate({angle:angle,transition:'all 5s ease-out'});\r\n            //旋转完成后\r\n            setTimeout(() => {\r\n                //对角度进行处理，以便下次旋转\r\n                setrotate({angle:angle%360,transition:'none'});\r\n                //通知闪烁,同时把中奖消息发送过去\r\n                PubSub.publish('Twinkle',item.msg);\r\n            }, 5000);\r\n        })\r\n        return () => {\r\n            PubSub.unsubscribe(token);\r\n        }\r\n    }, [prize,rotate_animate])\r\n\r\n    // return (\r\n    //     // 中间奖品\r\n    //     <ul id=\"wheel\" className=\"wheel-list\" style={{\r\n    //         transform:`rotate(${rotate_animate.angle}deg)`,\r\n    //         transition:rotate_animate.transition\r\n    //     }} >\r\n    //         {\r\n    //             data.map((prize,index)=>(\r\n    //                 <li key={prize.prize_id} >\r\n    //                     <i></i>\r\n    //                     <div className=\"prize\">\r\n    //                         <p>{prize.prize_name}</p>\r\n    //                         <img src={`/images/prize_img${index+1}.png`} alt=\"\" />\r\n    //                     </div>\r\n    //                 </li>\r\n    //             ))\r\n    //         }\r\n    //     </ul>\r\n    // )\r\n\r\n\r\n    return (\r\n        <ul id=\"wheel\" className=\"wheel-list\" style={{\r\n            transform:`rotate(${rotate_animate.angle}deg)`,\r\n            transition:rotate_animate.transition\r\n        }} >\r\n            {\r\n                console.log(\"data\",data)\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}